name: Build Docker Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Brain/**'
      - 'Friend/**'
      - 'Jarvis/**'
      - 'Search/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Brain/**'
      - 'Friend/**'
      - 'Jarvis/**'
      - 'Search/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        app: [brain, friend, jarvis, search]
        include:
          - app: brain
            context: ./Brain
          - app: friend
            context: ./Friend
          - app: jarvis
            context: ./Jarvis
          - app: search
            context: ./Search
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/neooriginal/omi.me-apps/${{ matrix.app }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push ${{ matrix.app }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.app }}
          cache-to: type=gha,mode=max,scope=${{ matrix.app }}

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v${{ github.run_number }}"
          RELEASE_NAME="Release v${{ github.run_number }}"
          
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "## OMI Apps Release v${{ github.run_number }}

          üê≥ **Docker Images Available:**
          - \`ghcr.io/neooriginal/omi.me-apps/brain:latest\`
          - \`ghcr.io/neooriginal/omi.me-apps/friend:latest\`
          - \`ghcr.io/neooriginal/omi.me-apps/jarvis:latest\`
          - \`ghcr.io/neooriginal/omi.me-apps/search:latest\`

          ## üöÄ Quick Start
          \`\`\`bash
          git clone https://github.com/neooriginal/OMI.me-Apps.git
          cd OMI.me-Apps
          cp docker.env.example .env
          # Edit .env with your configuration
          docker-compose up -d
          \`\`\`

          ## üì± Access Your Apps
          - **Brain:** http://localhost:3000
          - **Friend:** http://localhost:5000
          - **Jarvis:** http://localhost:8000
          - **Search:** http://localhost:5100"